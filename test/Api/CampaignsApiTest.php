<?php
/**
 * CampaignsApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Talon.One API
 *
 * The Talon.One API is used to manage applications and campaigns, as well as to integrate with your application. The operations in the _Integration API_ section are used to integrate with our platform, while the other operations are used to manage applications and campaigns.  ### Where is the API?  The API is available at the same hostname as these docs. For example, if you are reading this page at `https://mycompany.talon.one/docs/api/`, the URL for the [updateCustomerProfile][] operation is `https://mycompany.talon.one/v1/customer_profiles/id`  [updateCustomerProfile]: #operation--v1-customer_profiles--integrationId--put
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.3.1
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Swagger\Client;

use \Swagger\Client\Configuration;
use \Swagger\Client\ApiException;
use \Swagger\Client\ObjectSerializer;

/**
 * CampaignsApiTest Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class CampaignsApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for createCampaign
     *
     * Create a Campaign.
     *
     */
    public function testCreateCampaign()
    {
    }

    /**
     * Test case for createRuleset
     *
     * Create a Ruleset.
     *
     */
    public function testCreateRuleset()
    {
    }

    /**
     * Test case for deleteCampaign
     *
     * Delete a Campaign.
     *
     */
    public function testDeleteCampaign()
    {
    }

    /**
     * Test case for deleteRuleset
     *
     * Delete a Ruleset.
     *
     */
    public function testDeleteRuleset()
    {
    }

    /**
     * Test case for getCampaign
     *
     * Get a Campaign.
     *
     */
    public function testGetCampaign()
    {
    }

    /**
     * Test case for getCampaigns
     *
     * List your Campaigns.
     *
     */
    public function testGetCampaigns()
    {
    }

    /**
     * Test case for getRuleset
     *
     * Get a Ruleset.
     *
     */
    public function testGetRuleset()
    {
    }

    /**
     * Test case for getRulesets
     *
     * List Campaign Rulesets.
     *
     */
    public function testGetRulesets()
    {
    }

    /**
     * Test case for updateCampaign
     *
     * Update a Campaign.
     *
     */
    public function testUpdateCampaign()
    {
    }

    /**
     * Test case for updateRuleset
     *
     * Update a Ruleset.
     *
     */
    public function testUpdateRuleset()
    {
    }
}
